generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["referentialIntegrity", "fullTextSearch", "fullTextIndex"]
}

datasource db {
  provider     = "mysql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

model user {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  password      String?
  role          role      @default(USER)
  phone         String?   @unique
  accounts      account[]
  sessions      session[]

  @@fulltext([phone])
}

model account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?
  user              user    @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         user     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model verificationToken {
  id         String   @id @default(cuid())
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model phone_user_poin {
  id      String    @id @default(cuid())
  number  String    @unique
  history history[]
  redeem  redeem[]
}

model history {
  id            String           @id @default(cuid())
  createdAt     DateTime         @default(now())
  updatedAt     DateTime         @updatedAt
  phoneId       String?
  productId     String?
  userPhone     phone_user_poin? @relation(fields: [phoneId], references: [id])
  productDetail product_detail?   @relation(fields: [productId], references: [id])
}

model redeem {
  id          String           @id @default(cuid())
  redeem_poin String?
  total_poin  String?
  phoneId     String
  createdAt   DateTime         @default(now())
  expiredAt   String?
  updatedAt   DateTime         @updatedAt
  userPhone   phone_user_poin? @relation(fields: [phoneId], references: [id])
}

model stores {
  id          String           @id @default(cuid())
  name        String           @unique
  description String?
  img         String?
  filename    String?
  products    product_detail[]
}

model project {
  id       String  @id @default(cuid())
  name     String  @unique
  place    String?
  img      String?
  filename String?
}

model product {
  id             String           @id @default(cuid())
  title          String           @unique
  description    String
  quantity       String
  image          String
  filename       String?
  createdAt      DateTime         @default(now())
  code           String
  group          group            @default(HOSANA)
  product_detail product_detail[]

  @@fulltext([title])
}

model units {
  id             String           @id @default(cuid())
  name           String           @unique
  product_detail product_detail[]
}

model product_detail {
  id            String       @id @default(cuid())
  product_id    String?
  unit_id       String?
  store_id      String?
  subCategoryId String?
  discount      String?
  price         String?
  poin          String?       
  createdAt     DateTime     @default(now())
  expiredAt     String?
  updatedAt     DateTime?
  product       product?     @relation(fields: [product_id], references: [id])
  units         units?       @relation(fields: [unit_id], references: [id])
  stores        stores?      @relation(fields: [store_id], references: [id])
  subCategory   subCategory? @relation(fields: [subCategoryId], references: [id])
  history       history[]
}

model category {
  id          String        @id @default(cuid())
  name        String        @unique
  img         String?
  filename    String?
  subCategory subCategory[]

  @@fulltext([name])
}

model subCategory {
  id         String           @id @default(cuid())
  name       String           @unique
  categoryId String?
  category   category?        @relation(fields: [categoryId], references: [id])
  products   product_detail[]

  @@fulltext([name])
}

enum role {
  USER
  ADMIN
}

enum group {
  HOSANA
  KITO
}
