generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["referentialIntegrity","fullTextSearch", "fullTextIndex"]
}

datasource db {
  provider     = "mysql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

model user {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  password      String?
  role          role      @default(USER)
  accounts      account[]
  sessions      session[]
  history       history[]
}

model account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?
  user              user    @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         user     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model verificationToken {
  id         String   @id @default(cuid())
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model history {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  userId    String
  user      user     @relation(fields: [userId], references: [id])
}

model stores {
  id          String        @id @default(cuid())
  name        String        @unique
  description String?
  img         String?
  filename    String?
}

model project {
  id          String        @id @default(cuid())
  name        String        @unique
  place       String?
  img         String?
  filename    String?
}

model product {
  id            String       @id @default(cuid())
  title         String       @unique
  description   String
  price         String
  quantity      String
  image         String
  filename      String?
  createdAt     DateTime     @default(now())
  subCategoryId String?
  subCategory   subCategory? @relation(fields: [subCategoryId], references: [id])

  @@fulltext([title])
}

model category {
  id          String        @id @default(cuid())
  name        String        @unique
  img         String?
  filename    String?
  subCategory subCategory[]
}

model subCategory {
  id         String    @id @default(cuid())
  name       String    @unique
  categoryId String?
  category   category? @relation(fields: [categoryId], references: [id])
  products   product[]
  @@fulltext([name])
}

enum role {
  USER
  ADMIN
}
