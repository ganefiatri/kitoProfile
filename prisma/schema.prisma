generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["referentialIntegrity", "fullTextSearch", "fullTextIndex"]
}

datasource db {
  provider     = "mysql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

model user {
  id            String          @id @default(cuid())
  name          String?
  email         String?         @unique
  emailVerified DateTime?
  image         String?
  password      String?
  role          role            @default(USER)
  phone         String?         @unique
  accounts      account[]
  sessions      session[]
  customers     customer_poin[]
  history       history_poin[]
  redeem        redeem[]

  @@fulltext([phone])
}

model account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?
  user              user    @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         user     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model verificationToken {
  id         String   @id @default(cuid())
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model phone_user_poin {
  id      Int       @id @default(autoincrement())
  number  String
  history history[]
}

model customer_poin {
  id           Int            @id @default(autoincrement())
  loc          String
  ar_type      String
  ar_no        String
  ar_date      String
  due_date     String
  cust_code    String
  total_ar     String
  payment      String
  giro_rls     String
  description  String
  giro_no      String
  ar_notemp    String
  ac_code      String
  seri_id      String
  status       String
  flag_gl      String
  flag_giro    String
  status_giro  String
  giro         String
  flag_gl_cair String
  ac_biaya     String
  biaya        String
  cust_name    String
  sales_code   String
  sisa         String
  phone1       String
  due          String
  jual         String
  retur_panjar String
  periode      String
  keterangan   String
  kind         String
  userId       String?
  jenis        String
  user         user?          @relation(fields: [userId], references: [id])
  histories    history_poin[]
}

model history_poin {
  id           Int            @id @default(autoincrement())
  tgl          String
  jenis        String
  no_faktur    String
  no_cust      String
  nama_cust    String
  qty          String
  unit         String
  bns          String
  kode_stock   String
  nama_stock   String
  sls          String
  harga        String
  disc         String
  biaya        String
  jumlah       String
  loc          String
  customerId   Int?
  userId       String?
  customerPoin customer_poin? @relation(fields: [customerId], references: [id])
  users        user?          @relation(fields: [userId], references: [id])
}

model history {
  id            String           @id @default(cuid())
  createdAt     DateTime         @default(now())
  updatedAt     DateTime         @updatedAt
  phoneId       Int?
  productId     String?
  userPhone     phone_user_poin? @relation(fields: [phoneId], references: [id])
  productDetail product_detail?  @relation(fields: [productId], references: [id])
}

model redeem {
  id          String   @id @default(cuid())
  redeem_poin String?
  createdAt   DateTime @default(now())
  expiredAt   String?
  updatedAt   DateTime @updatedAt
  total_poin  String?
  userId      String?
  users       user?    @relation(fields: [userId], references: [id])
}

model stores {
  id          String           @id @default(cuid())
  name        String           @unique
  description String?
  img         String?
  filename    String?
  contact     String?
  map         String?
  products    product_detail[]
}

model project {
  id       String  @id @default(cuid())
  name     String  @unique
  place    String?
  img      String?
  filename String?
}

model product {
  id             String           @id @default(cuid())
  title          String           @unique
  description    String
  quantity       String
  image          String
  filename       String?
  createdAt      DateTime         @default(now())
  code           String
  group          group            @default(HOSANA)
  product_detail product_detail[]

  @@fulltext([title])
}

model units {
  id             String           @id @default(cuid())
  name           String           @unique
  product_detail product_detail[]
}

model product_detail {
  id            String            @id @default(cuid())
  product_id    String?
  unit_id       String?
  store_id      String?
  subCategoryId String?
  discount      String?
  price         String?
  createdAt     DateTime          @default(now())
  updatedAt     DateTime?
  brand_id      String?
  loc           String?
  poin          String?
  expiredAt     String?
  product       product?          @relation(fields: [product_id], references: [id])
  units         units?            @relation(fields: [unit_id], references: [id])
  brands        brands?           @relation(fields: [brand_id], references: [id])
  stores        stores?           @relation(fields: [store_id], references: [id])
  subCategory   subCategoryThird? @relation(fields: [subCategoryId], references: [id])
  history       history[]
  spesification spesification[]
}

model spesification {
  id            String          @id @default(cuid())
  titleOne      String?
  titleTwo      String?
  titleThree    String?
  titleFour     String?
  titleFive     String?
  answerOne     String?
  answerTwo     String?
  answerThree   String?
  answerFour    String?
  answerFive    String?
  productId     String?
  productDetail product_detail? @relation(fields: [productId], references: [id])
}

model category {
  id          String        @id @default(cuid())
  name        String        @unique
  img         String?
  filename    String?
  subCategory subCategory[]

  @@fulltext([name])
}

model subCategory {
  id               String             @id @default(cuid())
  name             String             @unique
  categoryId       String?
  category         category?          @relation(fields: [categoryId], references: [id])
  subCategoryThird subCategoryThird[]

  @@fulltext([name])
}

model subCategoryThird {
  id          String           @id @default(cuid())
  name        String           @unique
  subcatId    String?
  subCategory subCategory?     @relation(fields: [subcatId], references: [id])
  products    product_detail[]

  @@fulltext([name])
}

model brands {
  id             String           @id @default(cuid())
  name           String           @unique
  product_detail product_detail[]
}

enum role {
  USER
  ADMIN
}

enum group {
  HOSANA
  KITO
}
