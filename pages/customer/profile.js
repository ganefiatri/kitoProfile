import Head from 'next/head';
import React, { useState } from 'react';
import Banner from '../../components/contact/Banner';
import TableHistory from '../../components/customer/TableHistory';
import Header from '../../components/frontend/Header';
import prisma from '../../utils/prisma';

const Profile = ({ profileDetail }) => {
    console.log(profileDetail)
    const [name, setName] = useState(profileDetail.map(item => item.name));
    const [email, setEmail] = useState(profileDetail.map(item => item.email));
    const [tglLahir, setTglLahir] = useState(profileDetail.map(item => item.tgl_lahir));

    const handleFormData = async (e) => {
        e.preventDefault();
        const name = e.target.name.value;
        // await axios.post("/api/category/createdata",forms);
        const res = await fetch("/api/profile/editdata", {
            method: "PUT",
            body: JSON.stringify({
                id: profileDetail.map(item => item.id),
                name: name,
                email: email,
                tgl_lahir: tglLahir
            }),
            headers: {
                'Content-Type': 'application/json',
            }
        });
        const result = await res.json();
        router.push(`/customer/profile?q=${profileDetail.map(item => item.id)}`);

    }
    return (
        <div className='w-[600px] md:w-full lg:w-full sm:w-full'>
            <Head>
                <title>HOSANA GROUP</title>
                <meta name="description" content="Generated by create next app" />
                <link rel="shortcut icon" href="/assets/favicon/favicon.ico" />
                <link rel="icon" type="image/vnd.microsoft.icon" href="/assets/favicon/favicon.ico" />
                <link rel="icon" type="image/x-icon" href="/assets/favicon/favicon.ico" />
                <link rel="icon" href="/assets/favicon/favicon.ico" />
            </Head>
            {/* header Section */}
            <Header />
            <Banner />

            <main className='max-w-7xl mx-auto px-2 sm:px-16'>
                <section className='pt-10'>
                    <h2 className='text-4xl font-thin pb-3 text-center'>Profile</h2>
                    <form onSubmit={handleFormData}>
                        <div className='my-5 flex flex-wrap sm:my-8'>
                            <div className='w-full px-0 pb-5 sm:w-4/12 sm:py-8 sm:px-4 md:w-1/3 md:py-5'>
                                <h4 className='text-base font-semibold mb-2'>Details</h4>
                                <p className='text-sm'>Profile Detail Here</p>
                            </div>
                            <div className='p-5 md:p-8 bg-white shadow rounded w-full sm:w-8/12 md:w-2/3'>
                                <div className='mb-5'>
                                    <label for="name" className='block mb-3 text-sm font-normal leading-none text-gray-400'>Name</label>
                                    <input type="text" value={name} onChange={e => setName(e.target.value)} name="name" id="name" className='px-4 h-12 flex items-center w-full rounded appearance-none transition duration-300 ease-in-out text-heading text-sm focus:outline-none focus:ring-0 border border-border-base focus:border-accent' autoComplete='off' autoCorrect='off' autoCapitalize='off' spellCheck='false' />
                                </div>
                                <div className='mb-5'>
                                    <label for="email" className='block mb-3 text-sm font-normal leading-none text-gray-400'>Email</label>
                                    <input type="email" value={email} onChange={e => setEmail(e.target.value)} name="email" id="email" className='px-4 h-12 flex items-center w-full rounded appearance-none transition duration-300 ease-in-out text-heading text-sm focus:outline-none focus:ring-0 border border-border-base focus:border-accent' autoComplete='off' autoCorrect='off' autoCapitalize='off' spellCheck='false' />
                                </div>
                                <div className='mb-5'>
                                    <label for="date" className='block mb-3 text-sm font-normal leading-none text-gray-400'>Date</label>
                                    <input type="date" value={tglLahir} min={0} onChange={e => setTglLahir(e.target.value)} name="date" id="date" className='px-4 h-12 flex items-center w-full rounded appearance-none transition duration-300 ease-in-out text-heading text-sm focus:outline-none focus:ring-0 border border-border-base focus:border-accent' />
                                </div>
                            </div>
                        </div>
                        <div className='mb-4 text-end'>
                            <button type="submit" className='inline-flex items-center justify-center flex-shrink-0 font-normal leading-none rounded outline-none transition duration-300 ease-in-out focus:outline-none focus:shadow focus:ring-1 focus:ring-accent-700 bg-green-400 text-white border border-transparent hover:bg-accent-hover px-5 py-0 h-12'>Submit</button>
                        </div>
                    </form>
                </section>
            </main>
        </div>
    );
}

export default Profile;

export async function getServerSideProps(context) {
    // console.log(context.query.q)
    const profileDetail = await prisma.user.findMany({
        where: {
            id: context.query.q
        },
        include: {
            accounts: true,
        }
    });

    // autorize user
    return {
        props: { profileDetail }
    }
}