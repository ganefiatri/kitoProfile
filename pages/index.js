import Head from 'next/head'
import Banner from '../components/frontend/Banner'
import Category from '../components/Category'
import Footer from '../components/Footer'
import Header from '../components/frontend/Header'
import ProductCard from '../components/ProductCard'
import prisma from '../utils/prisma';
import { useSession } from 'next-auth/react'
import Link from 'next/link'
import Cardinfo from '../components/frontend/Cardinfo'
import { useRef, useState } from 'react'
import { AiOutlineLeft, AiOutlineRight } from 'react-icons/ai'
import ProjectHome from '../components/project/ProjectHome'

// const prisma = new PrismaClient();

export default function Home({ categories, projects, pictures }) {
  const { data: session } = useSession()
  const rowRef = useRef(null)
  const [isMoved, setIsMoved] = useState(false)

  const handleClick = (direction) => {
    setIsMoved(true)

    if (rowRef.current) {
      const { scrollLeft, clientWidth } = rowRef.current

      const scrollTo = direction === "left" ? scrollLeft - clientWidth : scrollLeft + clientWidth

      rowRef.current.scrollTo({ left: scrollTo, behavior: "smooth" })
    }
  };

  return (
    <div className='w-[600px] md:w-full lg:w-full sm:w-full'>
      <Head>
        <title>HOSANA GROUP</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="shortcut icon" href="/assets/favicon/favicon.ico" />
        <link rel="icon" type="image/vnd.microsoft.icon" href="/assets/favicon/favicon.ico" />
        <link rel="icon" type="image/x-icon" href="/assets/favicon/favicon.ico" />
        <link rel="icon" href="/assets/favicon/favicon.ico" />
      </Head>
      {/* header Section */}
      <Header />

      {/* Banner Section */}  
        <Banner key={pictures.map(item => item.id)} picture={pictures}/>
     

      {/* Category Section */}
      <main className='max-w-7xl mx-auto px-2 sm:px-16'>
        <section>
          <div className='justify-items-center grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 xl:grid-cols-3 p-3 ml-3 gap-2.5'>
            {/* Card Info Section */}
            <Cardinfo />
          </div>
        </section>

        <section className='pt-10'>
          <h2 className='text-4xl text-center font-thin pb-3'>Category</h2>
          <p className='text-gray-400 font-extralight text-center pb-5 cursor-pointer underline'><a href="/product">View all</a></p>

          {/* <div className='flex space-x-3 overflow-scroll scrollbar-hide p-3 ml-3'>
            {categories.map(item => (
              <Category key={item.id} img={item.img} title={item.name} />
            ))}
          </div> */}
          <div class="grid grid-cols-4 gap-4">
          {categories.map(item => (
            <a href={`/category/${item.id}`} className='relative inline-flex items-center w-full px-4 py-2 text-sm font-medium border-b border-gray-200 hover:bg-gray-100 hover:text-green-700 focus:z-10 focus:ring-2 focus:ring-green-700 focus:text-green-700 dark:border-gray-600 dark:hover:bg-gray-600 dark:hover:text-white dark:focus:ring-gray-500 dark:focus:text-white'>
              {item.name}</a>
             ))}
          </div>
        </section>

        <section className='pt-10'>
        <h2 className='text-4xl text-center font-thin pb-3'>Project</h2>
        <p className='text-gray-400 font-extralight text-center pb-5 cursor-pointer underline'><a href="/project">View all</a></p>

          <div className='flex space-x-3 overflow-scroll scrollbar-hide p-3 ml-3'>
              {projects.map(item => (
                <ProjectHome key={item.id} name={item.name} img={item.img} />
              ))}
          </div>
        </section>
        {/* <section className='pt-10'>
          <h2 className='text-4xl font-thin pb-3 text-center'>Products</h2>
          <p className='text-gray-400 font-extralight text-center pb-5 cursor-pointer underline'><a href="/product">View all</a></p>
          <div className="group relative md:-ml-2">
            <AiOutlineLeft className={`absolute top-0 bottom-0 left-2 z-40 m-auto h-9 w-9 cursor-pointer opacity-0 transition hover:scale-125 group-hover:opacity-100 ${!isMoved && "hidden"}`} onClick={() => handleClick("left")} />
            <div ref={rowRef} className='flex overflow-scroll scrollbar-hide p-3 ml-3'>
              {products.map(item => (
                  <ProductCard key={item.id} id={item.id} title={item.product.title} img={item.product.image} price={item.price} description={item.product.description} quantity={item.product.quantity} subCategory={item.subCategory.name} discount={item.discount} place={item.stores.name} group={item.product.group} unit={item.units.name}/>
              ))}
            </div>
            <AiOutlineRight className={`absolute top-0 bottom-0 right-2 z-40 m-auto h-9 w-9 cursor-pointer opacity-0 transition hover:scale-125 group-hover:opacity-100`} onClick={() => handleClick("right")} />
          </div>
        </section> */}

        {/* {session ? User({ session, handleSignOut }) : Guest()} */}
      </main>

      {/* footer section */}
      <Footer />
    </div>
  )
}

export async function getServerSideProps() {
  // const products = await prisma.product_detail.findMany({
  //   include: {
  //     product:true,
  //     subCategory: true,
  //     stores: true,
  //     units: true,
  //   },
  //   take: 10,
  //   orderBy: {
  //     id: 'asc'
  //   }
  // });
  const categories = await prisma.subCategoryThird.findMany();
  const projects = await prisma.project.findMany();
  const pictures = await prisma.picture.findMany();
  return {
    props: {
      // products: JSON.parse(JSON.stringify(products)),
      categories,
      projects,
      pictures
    }
  };
} 
