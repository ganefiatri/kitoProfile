import Head from 'next/head';
import React, { useState } from 'react';
import { FaUpload } from 'react-icons/fa';
import Header from '../../../../components/admin/Header';
import SideNavbar from '../../../../layout/SideNavbar';
import prisma from '../../../../utils/prisma';
import { useRouter } from "next/router";

export async function getServerSideProps({ params }) {
    const subCategoryId = await prisma.subCategory.findMany({
        where: {
            id: params.id
        }
    });
    const categories = await prisma.category.findMany();

    return {
        props: {
            subCategory: subCategoryId,
            categories: categories
        },
    }
}

const subCategorybyId = props => {
    const { subCategory, categories } = props;
    const router = useRouter()
    //state

    const handleFormData = async (e) => {
        e.preventDefault();
        const name = e.target.name.value;
        const category = e.target.category.value;
        const id = subCategory[0].id;
        const res = await fetch("/api/subCategory/editdata", {
            method: "PUT",
            body: JSON.stringify({
                name: name,
                category: category,
                id: id
            }),
            headers: {
                'Content-Type': 'application/json',
            }
        });
        const result = await res.json();
        router.push("/admin/subCategoryPage")
        console.log({result});
    }

    return (
        <>
            <Header />
            <SideNavbar>
                <Head>
                    <title>HOKITO GROUP</title>
                    <meta name="description" content="Generated by create next app" />
                    <link rel="shortcut icon" href="/assets/favicon/favicon.ico" />
                    <link rel="icon" type="image/vnd.microsoft.icon" href="/assets/favicon/favicon.ico" />
                    <link rel="icon" type="image/x-icon" href="/assets/favicon/favicon.ico" />
                    <link rel="icon" href="/assets/favicon/favicon.ico" />
                </Head>
                {/* Category */}
                <section>
                    <div className='flex border-b border-dashed border-border-base py-5 sm:py-8'>
                        <h1 className='text-lg font-semibold text-heading'>Edit SubCategory</h1>
                    </div>
                    <form onSubmit={handleFormData}>
                        <div className='my-5 flex flex-wrap sm:my-8'>
                            <div className='w-full px-0 pb-5 sm:w-4/12 sm:py-8 sm:px-4 md:w-1/3 md:py-5'>
                                <h4 className='text-base font-semibold mb-2'>Details</h4>
                                <p className='text-sm'>Add Category and Subcategory from here</p>
                            </div>
                            <div className='p-5 md:p-8 bg-white shadow rounded w-full sm:w-8/12 md:w-2/3'>
                                <div className='mb-5'>
                                    <label for="name" className='block mb-3 text-sm font-normal leading-none text-gray-400'>Name</label>
                                    <input type="text" value={subCategory[0].name} name="name" id="name" className='px-4 h-12 flex items-center w-full rounded appearance-none transition duration-300 ease-in-out text-heading text-sm focus:outline-none focus:ring-0 border border-border-base focus:border-accent' autoComplete='off' autoCorrect='off' autoCapitalize='off' spellCheck='false' />
                                </div>
                                <div>
                                    <label className='block text-gray-400 font-normal text-sm leading-none mb-3'>Parent Category</label>
                                    <select name='category' className='border border-gray-300 text-gray-400 text-sm rounded focus:ring-blue-500 focus:border-blue-500 block w-full h-12 p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-blue-500 dark:focus:border-blue-500'>
                                    {categories.map(item => (
                                            <option value={item.id}>{item.name}</option>
                                            ))}
                                    </select>
                                </div>
                            </div>
                        </div>
                        <div className='mb-4 text-end'>
                            <button type="submit" className='inline-flex items-center justify-center flex-shrink-0 font-normal leading-none rounded outline-none transition duration-300 ease-in-out focus:outline-none focus:shadow focus:ring-1 focus:ring-accent-700 bg-green-400 text-white border border-transparent hover:bg-accent-hover px-5 py-0 h-12'>Edit Category</button>
                        </div>
                    </form>
                </section>
            </SideNavbar>
        </>
    );
}

export default subCategorybyId;    
