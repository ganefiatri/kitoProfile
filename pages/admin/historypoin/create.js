import { getSession, useSession } from 'next-auth/react';
import Head from 'next/head';
import { useRouter } from 'next/router';
import React, { useState } from 'react';
import Header from '../../../components/admin/Header';
import SideNavbar from '../../../layout/SideNavbar';
import prisma from '../../../utils/prisma';
import Select from 'react-select';
import { toast } from 'react-toastify';
import "react-toastify/dist/ReactToastify.css";


const Create = ({ product, userPhone }) => {
    const { data: session } = useSession();
    const [selectedNames, setSelectedNames] = useState([]);
    const [selectedNumber, setSelectedNumber] = useState(null);
    const router = useRouter();

    const handleFormData = async (e) => {
        e.preventDefault();
        // await axios.post("/api/category/createdata",forms);
        // const phoneNumber = selectedNumber.map(items => items.id)
        // const multiProduct = selectedNames.map(items => items.id);
        const res = await fetch("/api/historypoin/createdata", {
            method: "POST",
            body: JSON.stringify({
                number: selectedNumber.id,
                product: selectedNames.id
            }),
            headers: {
                'Content-Type': 'application/json',
            }
        });
        const result = await res.json();
        if (result) {
            toast('Succesfully Insert Data, fill again!', { hideProgressBar: true, autoClose: 2000, type: 'success', position: 'top-right' })
        } else {
            toast('Failed Inserting Data! Try Again', { hideProgressBar: true, autoClose: 2000, type: 'error', position: 'top-right' })
        }
            
        // router.push("/admin/userPoinPage");

    }

    const optionProduct = product.map(item => ({ label: item.product.title, id: item.id, value: item.product.title }));

    const optionPhone = userPhone.map(item => ({label: item.number, id: item.id}))

    // console.log(optionProduct)

    const handleChange = (options) => {
        setSelectedNames(options)
    }

    const handleChangeNumber = (selectedNumber) => {
        setSelectedNumber(selectedNumber)
    }
    // console.log(selectedNumber.id)
    return (
        <>
            <Header />
            <SideNavbar>
                <Head>
                    <title>HOSANA GROUP</title>
                    <meta name="description" content="Generated by create next app" />
                    <link rel="shortcut icon" href="/assets/favicon/favicon.ico" />
                    <link rel="icon" type="image/vnd.microsoft.icon" href="/assets/favicon/favicon.ico" />
                    <link rel="icon" type="image/x-icon" href="/assets/favicon/favicon.ico" />
                    <link rel="icon" href="/assets/favicon/favicon.ico" />
                </Head>
                {/* subCategory */}
                <section>
                    <div className='flex border-b border-dashed border-border-base py-5 sm:py-8'>
                        <h1 className='text-lg font-semibold text-heading'>Create New History Poin</h1>
                    </div>
                    <form onSubmit={handleFormData}>
                        <div className='mb-5 w-1/2'>
                            <label className='block text-gray-400 font-normal text-sm leading-none mb-3'>Phone Number</label>
                            <Select  
                            options={optionPhone}
                            value={selectedNumber} 
                            onChange={handleChangeNumber} 
                            placeholder="Choose Phone Number"
                            />
                        </div>
                        <div className='mb-5  w-1/2'>
                            <label className='block text-gray-400 font-normal text-sm leading-none mb-3'>Product</label>
                            <Select
                                // isMulti
                                name="products"
                                options={optionProduct}
                                onChange={handleChange}
                                placeholder="Choose Product" />
                        </div>
                        <div className='mb-4 text-end'>
                            <button type="submit" className='inline-flex items-center justify-center flex-shrink-0 font-normal leading-none rounded outline-none transition duration-300 ease-in-out focus:outline-none focus:shadow focus:ring-1 focus:ring-accent-700 bg-green-400 text-white border border-transparent hover:bg-accent-hover px-5 py-0 h-12'>Add Phone Number</button>
                        </div>
                    </form>
                </section>
            </SideNavbar>
        </>
    );
}

export default Create;

export async function getServerSideProps({ req }) {
    const session = await getSession({ req });
    const product = await prisma.product_detail.findMany({
        include: {
            product: true
        }
    });
    const userPhone = await prisma.phone_user_poin.findMany();

    if (!session) {
        return {
            redirect: {
                destination: "/auth/login",
                permanent: false
            }
        }
    }
    // autorize user
    return {
        props: { session, product: JSON.parse(JSON.stringify(product)), userPhone }
    }
}