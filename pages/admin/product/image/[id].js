import Head from 'next/head';
import React, { useState } from 'react';
import { FaUpload } from 'react-icons/fa';
import Header from '../../../../components/admin/Header';
import SideNavbar from '../../../../layout/SideNavbar';
import prisma from '../../../../utils/prisma';
import { useRouter } from "next/router";
import { toast } from 'react-toastify';
import "react-toastify/dist/ReactToastify.css";

export async function getServerSideProps({ params }) {
    const productId = await prisma.product.findMany({
        where: {
            id: params.id
        },
        include: {
            product_detail: {
                include: {
                    units: true,
                    subCategory: true,
                    stores: true
                }
            },
        }
    });

    return {
        props: {
            product: JSON.parse(JSON.stringify(productId)),
        },
    }
}

const ProductbyId = props => {
    const { product } = props;
    // console.log(product[0].product_detail[0].price)
    const router = useRouter()
    //state
    const [imageUploaded, setImageUploaded] = useState([]);
    const [createObjectURL, setCreateObjectURL] = useState([]);

    const handleImage = (e) => {
        // add multiple image
        const file = e.target.files
        const img = [];
        for (let i = 0; i < file?.length; i++ ) {
            img.push(file[i])
            // setImageUploaded((img) => [...img, file[i]])
            // setImageUploaded((files) => [...files, file]);
            const reader = new FileReader();
            reader.readAsDataURL(file[i]);
            reader.onload = () => {
                setCreateObjectURL((imgs) => [...imgs, reader.result]);
            };
            reader.onerror = () => {
                console.log(reader.error);
            };
        }
        setImageUploaded(img)
    }

    const handleFormData = async (e) => {
        e.preventDefault();
        const forms = new FormData();
        for (let i = 0; i < imageUploaded?.length; i++) {
            forms.append(`image${i}`, imageUploaded[i])
        }
        forms.append('id', product[0].id)
        // await axios.post("/api/category/createdata",forms);
        const res = await fetch("/api/product/createImg", {
            method: "POST",
            body: forms,
        });
        const result = await res.json();
        if (!result) {
            toast('Something Wrong!', { hideProgressBar: true, autoClose: 2000, type: 'error', position: 'top-right' })
        } else {
            toast('Successfully Uploaded Image', { hideProgressBar: true, autoClose: 2000, type: 'success', position: 'top-right' })
            router.push("/admin/productPage");
        }
        // console.log(result)
    }

    return (
        <>
            <Header />
            <SideNavbar>
                <Head>
                    <title>HOKITO GROUP</title>
                    <meta name="description" content="Generated by create next app" />
                    <link rel="shortcut icon" href="/assets/favicon/favicon.ico" />
                    <link rel="icon" type="image/vnd.microsoft.icon" href="/assets/favicon/favicon.ico" />
                    <link rel="icon" type="image/x-icon" href="/assets/favicon/favicon.ico" />
                    <link rel="icon" href="/assets/favicon/favicon.ico" />
                </Head>
                {/* Category */}
                <section>
                    <div className='flex border-b border-dashed border-border-base py-5 sm:py-8'>
                        <h1 className='text-lg font-semibold text-heading'>Upload Multiple Product Image</h1>
                    </div>
                    <form onSubmit={handleFormData}>
                        <div className='my-5 flex flex-wrap border-b border-dashed border-border-base pb-8 sm:my-8'>
                            <div className='w-full px-0 pb-5 sm:w-4/12 sm:py-8 sm:px-4 md:w-1/3 md:py-5'>
                                <h4 className='text-base font-semibold mb-2'>Image</h4>
                                <p className='text-sm'>Upload Image here</p>
                            </div>
                            <div className='p-5 md:p-8 bg-white shadow rounded w-full sm:w-8/12 md:w-2/3'>
                                <section className='upload'>
                                    <label for="dropzone-file" className='border-dashed border-2 border-border-base h-36 rounded flex flex-col justify-center items-center cursor-pointer focus:border-accent-400 focus:outline-none'>
                                        <FaUpload />
                                        <p className='mt-4 text-center text-xs'>
                                            <span className='font-normal text-gray-600'>Upload an image </span>
                                            or drag and drop
                                            <br />
                                            <span className='text-xs'>PNG, JPG</span>
                                        </p>
                                        <input id="dropzone-file" onChange={handleImage} type="file" className='hidden' multiple />

                                    </label>
                                </section>
                                {createObjectURL &&
                                    <section>
                                        <div className='flex mb-5 overflow-hidden relative'>
                                            {createObjectURL.map((link) => (
                                                <>
                                                    <img key={link} src={link} alt="image" width={60} className='h-[60px] object-cover p-1' />
                                                </>
                                            ))}
                                        </div>
                                    </section>
                                }
                            </div>
                        </div>
                        <div className='mb-4 text-end'>
                            <button type="submit" className='inline-flex items-center justify-center flex-shrink-0 font-normal leading-none rounded outline-none transition duration-300 ease-in-out focus:outline-none focus:shadow focus:ring-1 focus:ring-accent-700 bg-green-400 text-white border border-transparent hover:bg-accent-hover px-5 py-0 h-12'>Upload Multiple Image</button>
                        </div>
                    </form>
                </section>
            </SideNavbar>
        </>
    );
}

export default ProductbyId;    
